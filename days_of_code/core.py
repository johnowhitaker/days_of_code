# AUTOGENERATED! DO NOT EDIT! File to edit: 00_core.ipynb (unless otherwise specified).

__all__ = ['demo_code', 'hw_cairo', 'surface_to_npy', 'surface_to_PIL', 'display_surface']

# Cell
def demo_code():
    return 'demo'

# Cell
import cairocffi as cairo
from IPython.display import Image, display

def hw_cairo(text):
    """ Write text as an angled line on a cairo ImageSurface and save to example.png, then display it."""
    surface = cairo.ImageSurface(cairo.FORMAT_ARGB32, 300, 200)
    context = cairo.Context(surface)
    with context:
        context.set_source_rgb(1, 1, 1)  # White
        context.paint()
    # Restore the default source which is black.
    context.move_to(90, 140)
    context.rotate(-0.5)
    context.set_font_size(20)
    context.show_text(text)
    surface.write_to_png('example.png')
    display(Image('example.png'))

# Cell
import numpy as np
import PIL
def surface_to_npy(surface):
    """ Cairo ImageSurface to numpy array for inline display"""
    buf = surface.get_data()
    im = np.frombuffer(buf, dtype=np.uint8)
    h = surface.get_height()
    w = surface.get_width()
    im = np.reshape(im, [h, w, 4])
    # swap axis to get r-g-b-alpha
    im = im[:, :, [2, 1, 0, 3]]
    return im

# Cell
def surface_to_PIL(surface):
    return PIL.Image.fromarray(surface_to_npy(surface))

def display_surface(surface):
    display(surface_to_PIL(surface))